{
  "name": "library",
  "description": "Library package template for distribution to npm",
  "version": "1.0.0",
  "supportedProjectTypes": ["library"],
  "variables": [
    {
      "name": "name",
      "type": "string",
      "description": "Project name",
      "required": true
    },
    {
      "name": "description",
      "type": "string",
      "description": "Project description",
      "required": false,
      "default": ""
    },
    {
      "name": "author",
      "type": "string",
      "description": "Project author",
      "required": false,
      "default": ""
    },
    {
      "name": "license",
      "type": "string",
      "description": "Project license",
      "required": false,
      "default": "MIT"
    },
    {
      "name": "qualityLevel",
      "type": "select",
      "description": "Code quality level",
      "required": true,
      "default": "medium"
    },
    {
      "name": "aiAssistants",
      "type": "multiselect",
      "description": "AI assistants to configure",
      "required": true,
      "default": ["claude-code"]
    },
    {
      "name": "year",
      "type": "string",
      "description": "Current year",
      "required": false,
      "default": "{{helper:year}}"
    }
  ],
  "files": [
    {
      "path": "package.json",
      "template": "{\n  \"name\": \"{{name}}\",\n  \"version\": \"1.0.0\",\n  \"description\": \"{{description}}\",\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.esm.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"import\": \"./dist/index.esm.js\",\n      \"require\": \"./dist/index.js\",\n      \"types\": \"./dist/index.d.ts\"\n    }\n  },\n  \"files\": [\n    \"dist\",\n    \"README.md\",\n    \"LICENSE\"\n  ],\n  \"scripts\": {\n    \"build\": \"bun run build:cjs && bun run build:esm\",\n    \"build:cjs\": \"tsc --project tsconfig.cjs.json\",\n    \"build:esm\": \"tsc --project tsconfig.esm.json\",\n    \"build:types\": \"tsc --project tsconfig.types.json\",\n    \"build:all\": \"bun run build:types && bun run build:cjs && bun run build:esm\",\n    \"typecheck\": \"tsc --noEmit\",\n    \"dev\": \"tsc --project tsconfig.types.json --watch\",\n    \"test\": \"bun test\",\n    \"test:unit\": \"bun test tests/unit/\",\n    \"test:integration\": \"bun test tests/integration/\",\n    \"test:coverage\": \"bun test --coverage\",\n    \"test:watch\": \"bun test --watch\",\n    \"lint\": \"eslint \\\"src/**/*.ts\\\" \\\"tests/**/*.ts\\\"\",\n    \"lint:fix\": \"eslint \\\"src/**/*.ts\\\" \\\"tests/**/*.ts\\\" --fix\",\n    \"format\": \"prettier --write \\\"src/**/*.ts\\\" \\\"tests/**/*.ts\\\"\",\n    \"format:check\": \"prettier --check \\\"src/**/*.ts\\\" \\\"tests/**/*.ts\\\"\",\n    \"prepublishOnly\": \"bun run build:all && bun run test\",\n    \"prepack\": \"bun run build:all\",\n    \"clean\": \"rm -rf dist node_modules coverage\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"@types/node\": \"^24.8.0\",\n    \"typescript\": \"^5.3.3\",\n    \"bun\": \"latest\",\n    \"eslint\": \"^8.56.0\",\n    \"prettier\": \"^3.1.0\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.21.0\",\n    \"@typescript-eslint/parser\": \"^6.21.0\"\n  },\n  \"peerDependencies\": {\n    \"typescript\": \">=4.5.0\"\n  },\n  \"engines\": {\n    \"bun\": \">=1.3.0\",\n    \"node\": \">=16.0.0\"\n  },\n  \"keywords\": [\n    \"typescript\",\n    \"library\",\n    \"{{helper:kebabCase name}}\"\n  ],\n  \"author\": \"{{author}}\",\n  \"license\": \"{{license}}\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/username/{{name}}.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/username/{{name}}/issues\"\n  },\n  \"homepage\": \"https://github.com/username/{{name}}#readme\"\n}",
      "permissions": "644"
    },
    {
      "path": "tsconfig.json",
      "template": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\",\n    \"declaration\": true,\n    \"declarationMap\": true,\n    \"sourceMap\": true,\n    \"removeComments\": false,\n    \"noImplicitAny\": {{#if (eq qualityLevel 'strict')}}true{{else}}false{{/if}},\n    \"noImplicitReturns\": {{#if (eq qualityLevel 'medium')}}true{{else}}{{#if (eq qualityLevel 'strict')}}true{{else}}false{{/if}}{{/if}},\n    \"noImplicitThis\": {{#if (eq qualityLevel 'strict')}}true{{else}}false{{/if}},\n    \"noUnusedLocals\": {{#if (eq qualityLevel 'strict')}}true{{else}}false{{/if}},\n    \"noUnusedParameters\": {{#if (eq qualityLevel 'strict')}}true{{else}}false{{/if}},\n    \"exactOptionalPropertyTypes\": {{#if (eq qualityLevel 'strict')}}true{{else}}false{{/if}}\n  },\n  \"include\": [\n    \"src/**/*\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"dist\",\n    \"coverage\",\n    \"tests\"\n  ]\n}",
      "permissions": "644"
    },
    {
      "path": "tsconfig.base.json",
      "template": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"lib\": [\"ES2020\"],\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"node\",\n    \"allowSyntheticDefaultImports\": true,\n    \"esModuleInterop\": true,\n    \"allowJs\": true,\n    \"strict\": true,\n    \"skipLibCheck\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"resolveJsonModule\": true\n  }\n}",
      "permissions": "644"
    },
    {
      "path": "tsconfig.cjs.json",
      "template": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"module\": \"CommonJS\",\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\",\n    \"declaration\": true,\n    \"declarationMap\": true,\n    \"sourceMap\": true\n  },\n  \"include\": [\n    \"src/**/*\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"dist\",\n    \"coverage\",\n    \"tests\"\n  ]\n}",
      "permissions": "644"
    },
    {
      "path": "tsconfig.esm.json",
      "template": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"module\": \"ESNext\",\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\"\n  },\n  \"include\": [\n    \"src/**/*\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"dist\",\n    \"coverage\",\n    \"tests\"\n  ]\n}",
      "permissions": "644"
    },
    {
      "path": "tsconfig.types.json",
      "template": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"declarationOnly\": true,\n    \"emitDeclarationOnly\": true,\n    \"outDir\": \"./dist\"\n  },\n  \"include\": [\n    \"src/**/*\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"dist\",\n    \"coverage\",\n    \"tests\"\n  ]\n}",
      "permissions": "644"
    },
    {
      "path": "src/index.ts",
      "template": "/**\n * {{helper:pascalCase name}} Library\n *\n * {{description}}\n *\n * @author {{author}}\n * @license {{license}}\n * @version 1.0.0\n * @since {{year}}\n */\n\n// Export core functionality\nexport * from './lib/core.js';\n\n// Export types\nexport type * from './types/index.js';\n\n// Export utilities\nexport * from './lib/utils/index.js';\n\n// Export constants\nexport * from './lib/constants/index.js';\n\n// Explicit named exports for common functionality\nexport { main, VERSION } from './lib/core.js';\nexport * from './lib/utils/index.js';\nexport * from './lib/constants/index.js';",
      "permissions": "644"
    },
    {
      "path": "src/lib/index.ts",
      "template": "/**\n * Library module exports for {{helper:pascalCase name}}\n */\n\nexport * from './core.js';\nexport * from './utils/index.js';\nexport * from './constants/index.js';",
      "permissions": "644"
    },
    {
      "path": "src/lib/core.ts",
      "template": "/**\n * Core functionality for {{helper:pascalCase name}}\n */\n\n// TODO: Implement core library functionality\n\nexport function main(): void {\n  console.log('{{helper:pascalCase name}} - Core functionality placeholder');\n}\n\nexport const VERSION = '1.0.0';",
      "permissions": "644"
    },
    {
      "path": "src/types/index.ts",
      "template": "/**\n * Type definitions for {{helper:pascalCase name}}\n */\n\n// Core types\nexport interface Config {\n  debug?: boolean;\n  version?: string;\n}\n\n// Function signatures\nexport interface MainFunction {\n  (): void;\n}\n\n// Error types\nexport class LibraryError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'LibraryError';\n  }\n}",
      "permissions": "644"
    },
    {
      "path": "src/lib/utils/index.ts",
      "template": "/**\n * Utility functions for {{helper:pascalCase name}}\n */\n\nexport function createLogger(prefix: string) {\n  return (message: string, ...args: any[]) => {\n    console.log(`[${prefix}] ${message}`, ...args);\n  };\n}\n\nexport function validateInput(input: unknown): boolean {\n  return input !== null && input !== undefined;\n}",
      "permissions": "644"
    },
    {
      "path": "src/lib/constants/index.ts",
      "template": "/**\n * Constants for {{helper:pascalCase name}}\n */\n\nexport const LIBRARY_NAME = '{{helper:pascalCase name}}';\nexport const DEFAULT_CONFIG = {\n  debug: false,\n  version: '1.0.0',\n};\n\nexport const ERROR_MESSAGES = {\n  INVALID_INPUT: 'Invalid input provided',\n  MISSING_CONFIG: 'Configuration is required',\n} as const;",
      "permissions": "644"
    },
    {
      "path": "examples/basic/usage.ts",
      "template": "/**\n * Basic usage example for {{helper:pascalCase name}}\n */\n\nimport { main } from '../../src/index.js';\n\n// Basic usage\nmain();\n\nconsole.log('Basic example completed successfully');",
      "permissions": "644"
    },
    {
      "path": "examples/advanced/usage.ts",
      "template": "/**\n * Advanced usage example for {{helper:pascalCase name}}\n */\n\nimport { main, Config } from '../../src/index.js';\n\n// Advanced usage with configuration\nconst config: Config = {\n  debug: true,\n};\n\nconsole.log('Running advanced example with config:', config);\nmain();\n\nconsole.log('Advanced example completed successfully');",
      "permissions": "644"
    },
    {
      "path": "benchmarks/performance.test.ts",
      "template": "/**\n * Performance benchmarks for {{helper:pascalCase name}}\n */\n\nimport { test, describe, expect } from 'bun:test';\nimport { main } from '../src/index.js';\n\ndescribe('Performance Benchmarks', () => {\n  test('main function performance', () => {\n    const startTime = performance.now();\n\n    // Run main function multiple times\n    for (let i = 0; i < 1000; i++) {\n      main();\n    }\n\n    const endTime = performance.now();\n    const duration = endTime - startTime;\n\n    // Should complete within reasonable time (adjust as needed)\n    expect(duration).toBeLessThan(1000);\n\n    console.log(`Main function completed 1000 iterations in ${duration.toFixed(2)}ms`);\n  });\n});",
      "permissions": "644"
    },
    {
      "path": "tests/index.test.ts",
      "template": "/**\n * Unit tests for {{helper:pascalCase name}} library\n */\n\nimport { describe, it, expect } from 'bun:test';\nimport { main, VERSION } from '../src/index.js';\n\ndescribe('{{helper:pascalCase name}} Library', () => {\n  describe('main function', () => {\n    it('should execute without errors', () => {\n      expect(() => main()).not.toThrow();\n    });\n  });\n\n  describe('constants', () => {\n    it('should have correct version', () => {\n      expect(VERSION).toBe('1.0.0');\n    });\n  });\n});",
      "permissions": "644"
    },
    {
      "path": "docs/api.md",
      "template": "# API Documentation\n\n## Overview\n\n{{description}}\n\n## Installation\n\n```bash\nnpm install {{name}}\n```\n\n## Usage\n\n```typescript\nimport { main } from '{{name}}';\n\n// TODO: Add usage examples\n```\n\n## API Reference\n\n### Functions\n\n```typescript\n// TODO: Add function documentation\n```\n\n## Contributing\n\nPlease see the main README.md for contribution guidelines.\n\n## License\n\n{{license}}",
      "permissions": "644"
    },
    {
      "path": "docs/api/.gitkeep",
      "template": "# This file ensures the docs/api directory is created and tracked",
      "permissions": "644"
    },
    {
      "path": "README.md",
      "template": "# {{helper:pascalCase name}}\n\n{{description}}\n\n## Installation\n\n```bash\n# npm\nnpm install {{name}}\n\n# yarn\nyarn add {{name}}\n\n# pnpm\npnpm add {{name}}\n\n# bun\nbun add {{name}}\n```\n\n## Quick Start\n\n```typescript\nimport { main } from '{{name}}';\n\n// Use the library\nmain();\n```\n\n## API Documentation\n\nSee [docs/api.md](./docs/api.md) for detailed API documentation.\n\n## Development\n\n```bash\n# Install dependencies\nbun install\n\n# Run tests\nbun test\n\n# Run tests with coverage\nbun run test:coverage\n\n# Build the library\nbun run build:all\n\n# Type checking\nbun run typecheck\n\n# Linting\nbun run lint\n\n# Formatting\nbun run format\n```\n\n## Build Output\n\nThis library builds to multiple formats:\n\n- **CommonJS**: `dist/index.js`\n- **ES Modules**: `dist/index.esm.js`\n- **TypeScript Declarations**: `dist/index.d.ts`\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## License\n\n{{license}} © {{year}} {{author}}",
      "permissions": "644"
    }
  ]
}
